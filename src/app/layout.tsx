// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";
// import Header from "./components/Header";
// // import Header from "./components/Header";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         <Header/>
//         {children}
//       </body>
//     </html>
//   );
// }



// "use client";

// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import { useEffect } from "react";
// import { useRouter, useSearchParams } from "next/navigation";
// import "./globals.css";
// import Header from "./components/Header";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   const router = useRouter();
//   const searchParams = useSearchParams();

//   useEffect(() => {
//     const type = searchParams.get("type");
    
//     // If email confirmation detected, redirect to /login
//     if (type === "signup") {
//       router.replace("/login");
//     }
//   }, [router, searchParams]);

//   return (
//     <html lang="en">
//       <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
//         <Header />
//         {children}
//       </body>
//     </html>
//   );
// }


"use client"; // This must remain for useRouter()

import { Geist, Geist_Mono } from "next/font/google";
import { useEffect } from "react";
import { useRouter, useSearchParams } from "next/navigation";
import "./globals.css";
import Header from "./components/Header";
import Theme from "../../Theme/Theme";
import 'ag-grid-community/styles/ag-grid.css'; // Core grid CSS, always needed

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const router = useRouter();
  const searchParams = useSearchParams();

  useEffect(() => {
    const type = searchParams.get("type");

    // If email confirmation detected, redirect to /login
    if (type === "signup") {
      router.replace("/login");
    }
  }, [router, searchParams]);

  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <Theme>
        <Header />
        {children}
        </Theme>
      </body>
    </html>
  );
}
